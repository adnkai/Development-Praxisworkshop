@page
@model ToDoListModel
@{
    ViewData["Title"] = "ToDo List";
    ViewData["listname"] = "";
    ViewData["toDoList"] = new List<TodoModel>();
}
<h1>@ViewData["Title"]</h1>
@await Html.PartialAsync("_ListOverviewPartial")

<script>
    function setupViewData() {
        ViewData["toDoList"] = null;
        ViewData["listName"] = "";
    }
</script>

@* <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
    @foreach(var listName in Model.todos.Keys) {
    <ul class="navbar-nav flex-grow-1">
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="@listName">@listName</a>
            </li>
    </ul>
    @await Html.PartialAsync("_ListPartial", new {Model = Model, todoList = Model.todos[listName], listName = listName})
    }
</div> *@

@foreach(var listName in Model.todos.Keys) {
    <p>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#@listName" aria-expanded="false" aria-controls="@listName">
        @listName
    </button>
    </p>
    
    @if (listName == "Default") {
        <div class="collapse show" id="@listName">
            @await Html.PartialAsync("_ListPartial", new {Model = Model, todoList = Model.todos[listName], listName = listName})
        </div>
    } else {
        <div class="collapse" id="@listName">
            @await Html.PartialAsync("_ListPartial", new {Model = Model, todoList = Model.todos[listName], listName = listName})
        </div>
    }
}



